import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# 1. load data
df = pd.read_csv('Chocolate Sales.csv')
print(df.head())

## check data types
df.info()

# 2. Clean data
## [1] change columns name + strip() + \.lower -> boxship = sales, amount = quantity
df.columns = df.columns.astype(str).str.strip().str.replace(' ', '_').str.lower()
df = df.rename(columns = {'boxes_shipped': 'quantity', 'amount': 'sales'})
print(df.head())

## [2] change data types amount + delete $
df['sales'] = df['sales'].astype(str).str.replace('$', '').str.replace(',', '')
df['sales'] = pd.to_numeric(df['sales'])
print(df.head())

## [3] change datetime
df['date'] = pd.to_datetime(df['date'], format = '%d-%b-%y')
print(df.head())

## [4] check na
df.isna().sum()

## [5] check duplicate
df.duplicated().sum()

## count unique
columns_check = ['sales_person', 'country', 'product']
count = [df[col].value_counts().head(10) for col in columns_check]
print(count, '\n')

## look stat
df.describe()

## build columns year, month, day, quarter
df['year'] = df['date'].dt.year
df['month'] = df['date'].dt.month
df['day'] = df['date'].dt.month
df['quarter'] = df['date'].dt.quarter
print(df.head())

# build column sales per quantity
df['sales_per_quantity'] = df['sales'] / df['quantity']
df

# Analyze data
# 1. Trend Sales and quantity in each country
## best-seller product per month
monthly_sales = df.groupby(['year', 'month', 'product'])['sales'].agg(sum).reset_index()
monthly_sales

## monthly trends
p_monthly_sales = sns.relplot(data = monthly_sales,\
				            x = 'month', y = 'sales', \
				            kind = 'line',
				            errorbar = None)

## sales , quantity group by country
country_sales = df.groupby('country')[['sales', 'quantity', 'sales_per_quantity']]\
                .agg(sum).reset_index()\
                .sort_values('sales', ascending = False).round(2)
print(country_sales.head())

## plot chart
monthly_trend = sns.relplot(data = df,\
                x = 'month', y = 'sales', \
                kind = 'line', \
                col = 'country', col_wrap = 3, \
                marker = 'o', \
                errorbar = None)

# 2. Which chocolate product is the best seller
## top 10 best seller
product_sales = df.groupby('product')[['sales', 'quantity']].agg(sum).reset_index().sort_values('sales', ascending = False)
print(product_sales.head(10))

## plot chart
p_product = product_sales.plot(kind = 'bar', x = 'product')
print(p_product)

## top 5 UK
UK_product = df.query('country == "UK"').sort_values('sales', ascending = False)
top5_uk_product = UK_product.groupby(['product', 'country'])['sales'].sum().sort_values(ascending=False).reset_index().head(5)
print(top5_uk_product.head())

## Filter for specific products in the UK
uk_products = df[(df['country'] == 'UK') & 
                 (df['product'].isin(['Peanut Butter Cubes', '99% Dark & Pure', 'Smooth Sliky Salty', 'White Choc', 'Almond Choco']))]
print(uk_products.head())

p_uk_products = sns.relplot(data = uk_products,\
                x = 'month', y = 'sales', \
                kind = 'line', \
                col = 'product', col_wrap = 3, \
                marker = 'o', \
                errorbar = None)
## top 5 India
IN_product = df.query('country == "India"').sort_values('sales', ascending = False)
top5_in_product = IN_product.groupby(['product', 'country'])['sales'].sum().sort_values(ascending=False).reset_index().head(5)
print(top5_in_product.head())

## Filter for specific products in the India
india_products = df[(df['country'] == 'India') & 
                 (df['product'].isin(['Eclairs', 'Peanut Butter Cubes', 'Smooth Sliky Salty', 'Spicy Special Slims', 'Mint Chip Choco']))]
print(india_products.head())

p_india_products = sns.relplot(data = india_products,\
                    x = 'month', y = 'sales', \
                    kind = 'line', \
                    col = 'product', col_wrap = 3, \
                    marker = 'o', \
                    errorbar = None)
## top 5 Australia
AUS_product = df.query('country == "Australia"').sort_values('sales', ascending = False)
top5_aus_product = AUS_product.groupby(['product', 'country'])['sales'].sum().sort_values(ascending=False).reset_index().head(5)
print(top5_aus_product.head())

## Filter for specific products in the Australia
aus_products = df[(df['country'] == 'Australia') & 
                 (df['product'].isin(['50% Dark Bites', 'Eclairs', 'Milk Bars', 'Spicy Special Slims', 'Organic Choco Syrup']))]
print(top5_aus_products.head())

p_india_products = sns.relplot(data = aus_products,\
                    x = 'month', y = 'sales', \
                    kind = 'line', \
                    col = 'product', col_wrap = 3, \
                    marker = 'o', \
                    errorbar = None)

## top 5 new zealand
NEW_product = df.query('country == "New Zealand"').sort_values('sales', ascending = False)
top5_new_product = NEW_product.groupby(['product', 'country'])['sales'].sum().sort_values(ascending=False).reset_index().head(5)
print(top5_new_product.head())

## Filter for specific products in the New Zealand
new_products = df[(df['country'] == 'New Zealand') & 
                 (df['product'].isin(['Mint Chip Choco', '85% Dark Bars', 'Eclairs', 'White Choc', 'After Nines']))]
print(new_products.head())

p_new_products = sns.relplot(data = new_products,\
                  x = 'month', y = 'sales', \
                  kind = 'line', \
                  col = 'product', col_wrap = 3, \
                  marker = 'o', \
                  errorbar = None)

## top 5 USA
USA_product = df.query('country == "USA"').sort_values('sales', ascending = False)
top5_usa_product = USA_product.groupby(['product', 'country'])['sales'].sum().sort_values(ascending=False).reset_index().head(5)
print(top5_usa_product.head())

## Filter for specific products in the USA
usa_products = df[(df['country'] == 'USA') & 
                 (df['product'].isin(['Raspberry Choco', 'Manuka Honey Choco', 'White Choc', '50% Dark Bites', '85% Dark Bars']))]
print(usa_products.head())

p_usa_products = sns.relplot(data = usa_products,\
                  x = 'month', y = 'sales', \
                  kind = 'line', \
                  col = 'product', col_wrap = 3, \
                  marker = 'o', \
                  errorbar = None)
## top 5 Canada
CAN_product = df.query('country == "Canada"').sort_values('sales', ascending = False)
top5_can_product = CAN_product.groupby(['product', 'country'])['sales'].sum().sort_values(ascending=False).reset_index().head(5)
print(top5_can_product.head())

## Filter for specific products in the Canada
can_products = df[(df['country'] == 'Canada') & 
                 (df['product'].isin(['Smooth Sliky Salty', 'Peanut Butter Cubes', '70% Dark Bites', 'Spicy Special Slims', 'Choco Coated Almonds']))]
print(can_products.head())


p_canada_products = sns.relplot(data = can_products,\
                    x = 'month', y = 'sales', \
                    kind = 'line', \
                    col = 'product', col_wrap = 3, \
                    marker = 'o', \
                    errorbar = None)

# 3. Target Profiles
## during not having customers columns , i will analyze target profile by using products
## top 5 UK
UK_product = df.query('country == "UK"').sort_values('sales', ascending = False)
top5_uk_product = UK_product.groupby(['product', 'country'])['sales'].sum().sort_values(ascending=False).reset_index().head(5)
print(top5_uk_product.head())

## top 5 India
IN_product = df.query('country == "India"').sort_values('sales', ascending = False)
top5_in_product = IN_product.groupby(['product', 'country'])['sales'].sum().sort_values(ascending=False).reset_index().head(5)
print(top5_in_product.head())

## top 5 Australia
AUS_product = df.query('country == "Australia"').sort_values('sales', ascending = False)
top5_aus_product = AUS_product.groupby(['product', 'country'])['sales'].sum().sort_values(ascending=False).reset_index().head(5)
print(top5_aus_product.head())

## top 5 new zealand
NEW_product = df.query('country == "New Zealand"').sort_values('sales', ascending = False)
top5_new_product = NEW_product.groupby(['product', 'country'])['sales'].sum().sort_values(ascending=False).reset_index().head(5)
print(top5_new_product.head())

## top 5 USA
USA_product = df.query('country == "USA"').sort_values('sales', ascending = False)
top5_usa_product = USA_product.groupby(['product', 'country'])['sales'].sum().sort_values(ascending=False).reset_index().head(5)
print(top5_usa_product.head())

## top 5 Canada
CAN_product = df.query('country == "Canada"').sort_values('sales', ascending = False)
top5_can_product = CAN_product.groupby(['product', 'country'])['sales'].sum().sort_values(ascending=False).reset_index().head(5)
print(top5_can_product.head())
